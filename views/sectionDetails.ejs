<!DOCTYPE html>
<html lang="en">
<%- include('./partials/head.ejs') %> 

<body>  

    <%- include('./partials/nav.ejs') %> 

    <div>
        <h2>Section: <%= section.title %></h2>
        <p><%= section.about %></p>
        <a class="delete-section" data-doc="<%= section._id %>">Delete Section</a>
    </div>

    <div>
        <h3>Questions</h3>
        <% if(section.subSections.length > 0) { %>
            <% section.subSections.forEach(subSection => { %>        
                <h3 class="question"><%= subSection.question %></h3>
                <p class="answer"><%= subSection.answer %></p>  
                <p class="screen"><%= subSection.screen %></p> 
                <a id="<%= section._id + '&' + subSection._id %>" onClick="onDeleteSubSection(this.id)" class="delete-question">Delete Question</a>
                <a 
                    id="<%= subSection._id %>" 
                    onClick="onModifySubSection(this.id)" 
                    class="modify-question"
                    data-section="<%= section._id  %>"
                    data-question="<%= subSection.question %>"
                    data-answer="<%= subSection.answer %>"
                    data-screen="<%= subSection.screen %>"
                    >
                    Modify Question
                </a>     
            <% }) %>
        <% } else { %>
            <h4>There aren't any questions in current section yet</h4>
        <% } %>
    </div>
    <div>
        <h3>Add new question:</h3>
        <div class="create-subSection">
            <form action="/subSections/<%= section._id %>" method="POST">
              <label for="question">Question:</label>
              <input type="text" id="question" name="question" required>
              <label for="answer">Answer:</label>
              <textarea type="text" id="answer" name="answer" required></textarea> 
              <label for="screen">Screen:</label>
              <input type="text" id="screen" name="screen">  
              <button>Save</button>
            </form>
        </div>
    </div>

    <%- include('./partials/footer.ejs') %>
    
    <script>
        const deleteSection = document.querySelector('.delete-section');
        deleteSection.addEventListener('click', async (e) => {
            const endpoint = `/sections/${deleteSection.dataset.doc}`;

            try {
                const res = await fetch(endpoint, {
                    method: 'DELETE'
                });

                const resData = await res.json();

                window.location.href = resData.redirect;
                
            } catch (err) {
                console.log(err);
            };
        });

        async function onDeleteSubSection(combinedId){      
            const endpoint = `/subsections?sectionId=${combinedId.split('&')[0]}&subSectionId=${combinedId.split('&')[1]}`;           

            try {
                const res = await fetch(endpoint, {
                    method: 'DELETE'           
                });

                const resData = await res.json();

                if(resData.msg === 'ok'){                                 
                    location.reload();
                    return false;
                };
                
            } catch (err) {
                console.log(err);
            };
        };
        
        async function onModifySubSection(subSection){
            const modifyQuestion = document.getElementById(subSection);
            
            const sectionId = modifyQuestion.dataset.section;
            let question = modifyQuestion.dataset.question;
            let answer = modifyQuestion.dataset.answer;
            let screen = modifyQuestion.dataset.screen;   
            
            // Create input fields
            const modifyDiv = document.createElement('div');
            modifyDiv.classList.add('modifyDivQuestion');

            const inputQuestion = document.createElement('input');   
            inputQuestion.value = question;           
            modifyDiv.appendChild(inputQuestion);

            const inputAnswer = document.createElement('input');
            inputAnswer.value = answer;          
            modifyDiv.appendChild(inputAnswer);

            const inputScreen = document.createElement('input');
            inputScreen.value = screen;          
            modifyDiv.appendChild(inputScreen);

            const saveChanges = document.createElement('a');
            saveChanges.appendChild(document.createTextNode('Save changes'));
            saveChanges.classList.add('modifyQuestionBtn');
            modifyDiv.appendChild(saveChanges);

            const cancelChanges = document.createElement('a');
            cancelChanges.appendChild(document.createTextNode('Cancel'));
            cancelChanges.classList.add('cancelModifyQuestionBtn');
            modifyDiv.appendChild(cancelChanges);

            modifyQuestion.parentNode.insertBefore(modifyDiv, modifyQuestion.nextSibling);

            modifyQuestion.style.display = 'none';

            inputQuestion.addEventListener('change', function () {               
                question = this.value;
            });

            inputAnswer.addEventListener('change', function () {               
                answer = this.value;
            });

            inputScreen.addEventListener('change', function () {               
                screen = this.value;
            });

            // send modify        
            saveChanges.addEventListener('click', async (e) => {
                console.log(e);
                const endpoint = `/subsections?sectionId=${sectionId}&subSectionId=${subSection}`;

                const formData = new FormData();
                formData.append('question', 'test question');         

                try {
                    const res = await fetch(endpoint, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ question, answer, screen })
                    });

                    modifyDiv.style.display = 'none';
                    modifyQuestion.style.display = 'block';

                    const resData = await res.json();                   

                    if(resData.msg === 'ok'){                                 
                        location.reload();
                        return false;
                    };
                    
                } catch (err) {
                    console.log(err);
                };
            });  

            cancelChanges.addEventListener('click', (e) => {
                modifyDiv.style.display = 'none';
                modifyQuestion.style.display = 'block';
            });     
        };

    </script>
</body>
</html>