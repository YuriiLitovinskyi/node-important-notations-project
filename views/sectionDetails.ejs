<!DOCTYPE html>
<html lang="en">
<%- include('./partials/head.ejs') %> 

<body>  

    <%- include('./partials/nav.ejs') %> 

    <div>
        <h2>Section: <%= section.title %></h2>
        <p><%= section.about %></p>
        <a class="delete-section" data-doc="<%= section._id %>">Delete Section</a>
    </div>

    <div>
        <h3>Questions</h3>
        <% if(section.subSections.length > 0) { %>
            <% section.subSections.forEach(subSection => { %>        
                <h3 class="question"><%= subSection.question %></h3>
                <p class="answer"><%= subSection.answer %></p>  
                <p class="screen"><%= subSection.screen %></p> 
                <a id="<%= section._id + '&' + subSection._id %>" onClick="onDeleteSubSection(this.id)" class="delete-question">Delete Question</a>
                <a id="<%= section._id + '&' + subSection._id %>" onClick="onModifySubSection(this.id)" class="modify-question">Modify Question</a>     
            <% }) %>
        <% } else { %>
            <h4>There aren't any questions in current section yet</h4>
        <% } %>
    </div>
    <div>
        <h3>Add new question:</h3>
        <div class="create-subSection">
            <form action="/subSections/<%= section._id %>" method="POST">
              <label for="question">Question:</label>
              <input type="text" id="question" name="question" required>
              <label for="answer">Answer:</label>
              <textarea type="text" id="answer" name="answer" required></textarea> 
              <label for="screen">Screen:</label>
              <input type="text" id="screen" name="screen">  
              <button>Save</button>
            </form>
        </div>
    </div>

    <%- include('./partials/footer.ejs') %>
    
    <script>
        const deleteSection = document.querySelector('.delete-section');
        deleteSection.addEventListener('click', async (e) => {
            const endpoint = `/sections/${deleteSection.dataset.doc}`;

            try {
                const res = await fetch(endpoint, {
                    method: 'DELETE'
                });

                const resData = await res.json();

                window.location.href = resData.redirect;
                
            } catch (err) {
                console.log(err);
            };
        });

        async function onDeleteSubSection(combinedId){      
            const endpoint = `/subsections?sectionId=${combinedId.split('&')[0]}&subSectionId=${combinedId.split('&')[1]}`;           

            try {
                const res = await fetch(endpoint, {
                    method: 'DELETE'           
                });

                const resData = await res.json();

                if(resData.msg === 'ok'){                                 
                    location.reload();
                    return false;
                };
                
            } catch (err) {
                console.log(err);
            };
        };
        
        async function onModifySubSection(combinedId){
            const endpoint = `/subsections?sectionId=${combinedId.split('&')[0]}&subSectionId=${combinedId.split('&')[1]}`;

            const formData = new FormData();
            formData.append('question', 'test question');

            try {
                const res = await fetch(endpoint, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ question: 'test question', answer: 'test answer', screen: 'test screen' })
                });
                
            } catch (err) {
                console.log(err);
            };

        };
    </script>
</body>
</html>